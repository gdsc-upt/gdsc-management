@attribute [Route(TeamRoutes.Edit)]
@using GdscManagement.Common.Features.Teams.Models
@using GdscManagement.Common.Repository
@using GdscManagement.Features.Teams
@using GdscManagement.Pages.Teams.Components
@inherits GdscManagement.Pages.Shared.BaseComponent
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject IRepository<Team> TeamRepository

<PageTitle>Edit Team</PageTitle>

@if (Model is not null)
{
    <AddEditTeamForm Model="@Model"/>

    <MudButton
        OnClick="() => TeamRepository.AddAsync(Model)"
        Variant="Variant.Filled"
        StartIcon="fa-solid fa-circle-check"
        IconColor="Color.Surface"
        Color="Color.Success"
        Class="ml-auto">
        Update
    </MudButton>
}

@code {

    [Parameter]
    public string Id { get; set; } = null!;

    private Team? Model { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Model = await TeamRepository.GetAsync(Id);

        if (Model is null)
        {
            Snackbar.Add("Team not found", Severity.Error);
            NavigationManager.NavigateTo(TeamRoutes.Main);
        }
    }

}